// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/admin_service.proto
// Protobuf C++ Version: 5.29.3

#ifndef proto_2fadmin_5fservice_2eproto_2epb_2eh
#define proto_2fadmin_5fservice_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/empty.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_proto_2fadmin_5fservice_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_proto_2fadmin_5fservice_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_proto_2fadmin_5fservice_2eproto;
namespace admin {
class AddServerResponse;
struct AddServerResponseDefaultTypeInternal;
extern AddServerResponseDefaultTypeInternal _AddServerResponse_default_instance_;
class ListServersResponse;
struct ListServersResponseDefaultTypeInternal;
extern ListServersResponseDefaultTypeInternal _ListServersResponse_default_instance_;
class MetricsResponse;
struct MetricsResponseDefaultTypeInternal;
extern MetricsResponseDefaultTypeInternal _MetricsResponse_default_instance_;
class RemoveServerRequest;
struct RemoveServerRequestDefaultTypeInternal;
extern RemoveServerRequestDefaultTypeInternal _RemoveServerRequest_default_instance_;
class ServerConstraintsResponse;
struct ServerConstraintsResponseDefaultTypeInternal;
extern ServerConstraintsResponseDefaultTypeInternal _ServerConstraintsResponse_default_instance_;
class ServerInfo;
struct ServerInfoDefaultTypeInternal;
extern ServerInfoDefaultTypeInternal _ServerInfo_default_instance_;
class UpdateServerHealthRequest;
struct UpdateServerHealthRequestDefaultTypeInternal;
extern UpdateServerHealthRequestDefaultTypeInternal _UpdateServerHealthRequest_default_instance_;
class UpdateServerHealthRequests;
struct UpdateServerHealthRequestsDefaultTypeInternal;
extern UpdateServerHealthRequestsDefaultTypeInternal _UpdateServerHealthRequests_default_instance_;
}  // namespace admin
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace admin {

// ===================================================================


// -------------------------------------------------------------------

class UpdateServerHealthRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:admin.UpdateServerHealthRequest) */ {
 public:
  inline UpdateServerHealthRequest() : UpdateServerHealthRequest(nullptr) {}
  ~UpdateServerHealthRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateServerHealthRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateServerHealthRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateServerHealthRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateServerHealthRequest(const UpdateServerHealthRequest& from) : UpdateServerHealthRequest(nullptr, from) {}
  inline UpdateServerHealthRequest(UpdateServerHealthRequest&& from) noexcept
      : UpdateServerHealthRequest(nullptr, std::move(from)) {}
  inline UpdateServerHealthRequest& operator=(const UpdateServerHealthRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateServerHealthRequest& operator=(UpdateServerHealthRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateServerHealthRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateServerHealthRequest* internal_default_instance() {
    return reinterpret_cast<const UpdateServerHealthRequest*>(
        &_UpdateServerHealthRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(UpdateServerHealthRequest& a, UpdateServerHealthRequest& b) { a.Swap(&b); }
  inline void Swap(UpdateServerHealthRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateServerHealthRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateServerHealthRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateServerHealthRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateServerHealthRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateServerHealthRequest& from) { UpdateServerHealthRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateServerHealthRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "admin.UpdateServerHealthRequest"; }

 protected:
  explicit UpdateServerHealthRequest(::google::protobuf::Arena* arena);
  UpdateServerHealthRequest(::google::protobuf::Arena* arena, const UpdateServerHealthRequest& from);
  UpdateServerHealthRequest(::google::protobuf::Arena* arena, UpdateServerHealthRequest&& from) noexcept
      : UpdateServerHealthRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kCpuUsageFieldNumber = 3,
    kMemoryUsageFieldNumber = 4,
    kIsHealthyFieldNumber = 2,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // double cpu_usage = 3;
  void clear_cpu_usage() ;
  double cpu_usage() const;
  void set_cpu_usage(double value);

  private:
  double _internal_cpu_usage() const;
  void _internal_set_cpu_usage(double value);

  public:
  // double memory_usage = 4;
  void clear_memory_usage() ;
  double memory_usage() const;
  void set_memory_usage(double value);

  private:
  double _internal_memory_usage() const;
  void _internal_set_memory_usage(double value);

  public:
  // bool isHealthy = 2;
  void clear_ishealthy() ;
  bool ishealthy() const;
  void set_ishealthy(bool value);

  private:
  bool _internal_ishealthy() const;
  void _internal_set_ishealthy(bool value);

  public:
  // @@protoc_insertion_point(class_scope:admin.UpdateServerHealthRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 4, 0,
      42, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateServerHealthRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    double cpu_usage_;
    double memory_usage_;
    bool ishealthy_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fadmin_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ServerInfo final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:admin.ServerInfo) */ {
 public:
  inline ServerInfo() : ServerInfo(nullptr) {}
  ~ServerInfo() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ServerInfo* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ServerInfo));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ServerInfo(
      ::google::protobuf::internal::ConstantInitialized);

  inline ServerInfo(const ServerInfo& from) : ServerInfo(nullptr, from) {}
  inline ServerInfo(ServerInfo&& from) noexcept
      : ServerInfo(nullptr, std::move(from)) {}
  inline ServerInfo& operator=(const ServerInfo& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerInfo& operator=(ServerInfo&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerInfo& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerInfo* internal_default_instance() {
    return reinterpret_cast<const ServerInfo*>(
        &_ServerInfo_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(ServerInfo& a, ServerInfo& b) { a.Swap(&b); }
  inline void Swap(ServerInfo* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerInfo* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerInfo* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ServerInfo>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServerInfo& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ServerInfo& from) { ServerInfo::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ServerInfo* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "admin.ServerInfo"; }

 protected:
  explicit ServerInfo(::google::protobuf::Arena* arena);
  ServerInfo(::google::protobuf::Arena* arena, const ServerInfo& from);
  ServerInfo(::google::protobuf::Arena* arena, ServerInfo&& from) noexcept
      : ServerInfo(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
    kHostFieldNumber = 2,
    kPortFieldNumber = 3,
    kIsHealthyFieldNumber = 4,
    kLastHealthCheckUnixSecondsFieldNumber = 5,
    kRequestCountFieldNumber = 6,
    kCpuUsageFieldNumber = 7,
    kMemoryUsageFieldNumber = 8,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // string host = 2;
  void clear_host() ;
  const std::string& host() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_host(Arg_&& arg, Args_... args);
  std::string* mutable_host();
  PROTOBUF_NODISCARD std::string* release_host();
  void set_allocated_host(std::string* value);

  private:
  const std::string& _internal_host() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_host(
      const std::string& value);
  std::string* _internal_mutable_host();

  public:
  // uint32 port = 3;
  void clear_port() ;
  ::uint32_t port() const;
  void set_port(::uint32_t value);

  private:
  ::uint32_t _internal_port() const;
  void _internal_set_port(::uint32_t value);

  public:
  // bool isHealthy = 4;
  void clear_ishealthy() ;
  bool ishealthy() const;
  void set_ishealthy(bool value);

  private:
  bool _internal_ishealthy() const;
  void _internal_set_ishealthy(bool value);

  public:
  // int64 last_health_check_unix_seconds = 5;
  void clear_last_health_check_unix_seconds() ;
  ::int64_t last_health_check_unix_seconds() const;
  void set_last_health_check_unix_seconds(::int64_t value);

  private:
  ::int64_t _internal_last_health_check_unix_seconds() const;
  void _internal_set_last_health_check_unix_seconds(::int64_t value);

  public:
  // int64 request_count = 6;
  void clear_request_count() ;
  ::int64_t request_count() const;
  void set_request_count(::int64_t value);

  private:
  ::int64_t _internal_request_count() const;
  void _internal_set_request_count(::int64_t value);

  public:
  // double cpu_usage = 7;
  void clear_cpu_usage() ;
  double cpu_usage() const;
  void set_cpu_usage(double value);

  private:
  double _internal_cpu_usage() const;
  void _internal_set_cpu_usage(double value);

  public:
  // double memory_usage = 8;
  void clear_memory_usage() ;
  double memory_usage() const;
  void set_memory_usage(double value);

  private:
  double _internal_memory_usage() const;
  void _internal_set_memory_usage(double value);

  public:
  // @@protoc_insertion_point(class_scope:admin.ServerInfo)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 8, 0,
      39, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ServerInfo& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::ArenaStringPtr host_;
    ::uint32_t port_;
    bool ishealthy_;
    ::int64_t last_health_check_unix_seconds_;
    ::int64_t request_count_;
    double cpu_usage_;
    double memory_usage_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fadmin_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ServerConstraintsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:admin.ServerConstraintsResponse) */ {
 public:
  inline ServerConstraintsResponse() : ServerConstraintsResponse(nullptr) {}
  ~ServerConstraintsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ServerConstraintsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ServerConstraintsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ServerConstraintsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ServerConstraintsResponse(const ServerConstraintsResponse& from) : ServerConstraintsResponse(nullptr, from) {}
  inline ServerConstraintsResponse(ServerConstraintsResponse&& from) noexcept
      : ServerConstraintsResponse(nullptr, std::move(from)) {}
  inline ServerConstraintsResponse& operator=(const ServerConstraintsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ServerConstraintsResponse& operator=(ServerConstraintsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ServerConstraintsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ServerConstraintsResponse* internal_default_instance() {
    return reinterpret_cast<const ServerConstraintsResponse*>(
        &_ServerConstraintsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(ServerConstraintsResponse& a, ServerConstraintsResponse& b) { a.Swap(&b); }
  inline void Swap(ServerConstraintsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ServerConstraintsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ServerConstraintsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ServerConstraintsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ServerConstraintsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ServerConstraintsResponse& from) { ServerConstraintsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ServerConstraintsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "admin.ServerConstraintsResponse"; }

 protected:
  explicit ServerConstraintsResponse(::google::protobuf::Arena* arena);
  ServerConstraintsResponse(::google::protobuf::Arena* arena, const ServerConstraintsResponse& from);
  ServerConstraintsResponse(::google::protobuf::Arena* arena, ServerConstraintsResponse&& from) noexcept
      : ServerConstraintsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMinServersFieldNumber = 1,
    kMaxServersFieldNumber = 2,
    kActiveServersFieldNumber = 3,
  };
  // uint32 min_servers = 1;
  void clear_min_servers() ;
  ::uint32_t min_servers() const;
  void set_min_servers(::uint32_t value);

  private:
  ::uint32_t _internal_min_servers() const;
  void _internal_set_min_servers(::uint32_t value);

  public:
  // uint32 max_servers = 2;
  void clear_max_servers() ;
  ::uint32_t max_servers() const;
  void set_max_servers(::uint32_t value);

  private:
  ::uint32_t _internal_max_servers() const;
  void _internal_set_max_servers(::uint32_t value);

  public:
  // uint32 active_servers = 3;
  void clear_active_servers() ;
  ::uint32_t active_servers() const;
  void set_active_servers(::uint32_t value);

  private:
  ::uint32_t _internal_active_servers() const;
  void _internal_set_active_servers(::uint32_t value);

  public:
  // @@protoc_insertion_point(class_scope:admin.ServerConstraintsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      2, 3, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ServerConstraintsResponse& from_msg);
    ::uint32_t min_servers_;
    ::uint32_t max_servers_;
    ::uint32_t active_servers_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fadmin_5fservice_2eproto;
};
// -------------------------------------------------------------------

class RemoveServerRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:admin.RemoveServerRequest) */ {
 public:
  inline RemoveServerRequest() : RemoveServerRequest(nullptr) {}
  ~RemoveServerRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RemoveServerRequest* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RemoveServerRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RemoveServerRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline RemoveServerRequest(const RemoveServerRequest& from) : RemoveServerRequest(nullptr, from) {}
  inline RemoveServerRequest(RemoveServerRequest&& from) noexcept
      : RemoveServerRequest(nullptr, std::move(from)) {}
  inline RemoveServerRequest& operator=(const RemoveServerRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RemoveServerRequest& operator=(RemoveServerRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RemoveServerRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const RemoveServerRequest* internal_default_instance() {
    return reinterpret_cast<const RemoveServerRequest*>(
        &_RemoveServerRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(RemoveServerRequest& a, RemoveServerRequest& b) { a.Swap(&b); }
  inline void Swap(RemoveServerRequest* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RemoveServerRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RemoveServerRequest* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RemoveServerRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RemoveServerRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RemoveServerRequest& from) { RemoveServerRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RemoveServerRequest* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "admin.RemoveServerRequest"; }

 protected:
  explicit RemoveServerRequest(::google::protobuf::Arena* arena);
  RemoveServerRequest(::google::protobuf::Arena* arena, const RemoveServerRequest& from);
  RemoveServerRequest(::google::protobuf::Arena* arena, RemoveServerRequest&& from) noexcept
      : RemoveServerRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:admin.RemoveServerRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      36, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const RemoveServerRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fadmin_5fservice_2eproto;
};
// -------------------------------------------------------------------

class MetricsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:admin.MetricsResponse) */ {
 public:
  inline MetricsResponse() : MetricsResponse(nullptr) {}
  ~MetricsResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(MetricsResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(MetricsResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR MetricsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline MetricsResponse(const MetricsResponse& from) : MetricsResponse(nullptr, from) {}
  inline MetricsResponse(MetricsResponse&& from) noexcept
      : MetricsResponse(nullptr, std::move(from)) {}
  inline MetricsResponse& operator=(const MetricsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline MetricsResponse& operator=(MetricsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const MetricsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const MetricsResponse* internal_default_instance() {
    return reinterpret_cast<const MetricsResponse*>(
        &_MetricsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(MetricsResponse& a, MetricsResponse& b) { a.Swap(&b); }
  inline void Swap(MetricsResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MetricsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  MetricsResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<MetricsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const MetricsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const MetricsResponse& from) { MetricsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(MetricsResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "admin.MetricsResponse"; }

 protected:
  explicit MetricsResponse(::google::protobuf::Arena* arena);
  MetricsResponse(::google::protobuf::Arena* arena, const MetricsResponse& from);
  MetricsResponse(::google::protobuf::Arena* arena, MetricsResponse&& from) noexcept
      : MetricsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCpuUsageFieldNumber = 1,
    kMemoryUsageFieldNumber = 2,
  };
  // double cpu_usage = 1;
  void clear_cpu_usage() ;
  double cpu_usage() const;
  void set_cpu_usage(double value);

  private:
  double _internal_cpu_usage() const;
  void _internal_set_cpu_usage(double value);

  public:
  // double memory_usage = 2;
  void clear_memory_usage() ;
  double memory_usage() const;
  void set_memory_usage(double value);

  private:
  double _internal_memory_usage() const;
  void _internal_set_memory_usage(double value);

  public:
  // @@protoc_insertion_point(class_scope:admin.MetricsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      1, 2, 0,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const MetricsResponse& from_msg);
    double cpu_usage_;
    double memory_usage_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fadmin_5fservice_2eproto;
};
// -------------------------------------------------------------------

class AddServerResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:admin.AddServerResponse) */ {
 public:
  inline AddServerResponse() : AddServerResponse(nullptr) {}
  ~AddServerResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(AddServerResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(AddServerResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddServerResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddServerResponse(const AddServerResponse& from) : AddServerResponse(nullptr, from) {}
  inline AddServerResponse(AddServerResponse&& from) noexcept
      : AddServerResponse(nullptr, std::move(from)) {}
  inline AddServerResponse& operator=(const AddServerResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddServerResponse& operator=(AddServerResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddServerResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddServerResponse* internal_default_instance() {
    return reinterpret_cast<const AddServerResponse*>(
        &_AddServerResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(AddServerResponse& a, AddServerResponse& b) { a.Swap(&b); }
  inline void Swap(AddServerResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddServerResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddServerResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<AddServerResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddServerResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddServerResponse& from) { AddServerResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(AddServerResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "admin.AddServerResponse"; }

 protected:
  explicit AddServerResponse(::google::protobuf::Arena* arena);
  AddServerResponse(::google::protobuf::Arena* arena, const AddServerResponse& from);
  AddServerResponse(::google::protobuf::Arena* arena, AddServerResponse&& from) noexcept
      : AddServerResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kIdFieldNumber = 1,
  };
  // string id = 1;
  void clear_id() ;
  const std::string& id() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_id(Arg_&& arg, Args_... args);
  std::string* mutable_id();
  PROTOBUF_NODISCARD std::string* release_id();
  void set_allocated_id(std::string* value);

  private:
  const std::string& _internal_id() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_id(
      const std::string& value);
  std::string* _internal_mutable_id();

  public:
  // @@protoc_insertion_point(class_scope:admin.AddServerResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      34, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddServerResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr id_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fadmin_5fservice_2eproto;
};
// -------------------------------------------------------------------

class UpdateServerHealthRequests final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:admin.UpdateServerHealthRequests) */ {
 public:
  inline UpdateServerHealthRequests() : UpdateServerHealthRequests(nullptr) {}
  ~UpdateServerHealthRequests() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(UpdateServerHealthRequests* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(UpdateServerHealthRequests));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR UpdateServerHealthRequests(
      ::google::protobuf::internal::ConstantInitialized);

  inline UpdateServerHealthRequests(const UpdateServerHealthRequests& from) : UpdateServerHealthRequests(nullptr, from) {}
  inline UpdateServerHealthRequests(UpdateServerHealthRequests&& from) noexcept
      : UpdateServerHealthRequests(nullptr, std::move(from)) {}
  inline UpdateServerHealthRequests& operator=(const UpdateServerHealthRequests& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateServerHealthRequests& operator=(UpdateServerHealthRequests&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const UpdateServerHealthRequests& default_instance() {
    return *internal_default_instance();
  }
  static inline const UpdateServerHealthRequests* internal_default_instance() {
    return reinterpret_cast<const UpdateServerHealthRequests*>(
        &_UpdateServerHealthRequests_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(UpdateServerHealthRequests& a, UpdateServerHealthRequests& b) { a.Swap(&b); }
  inline void Swap(UpdateServerHealthRequests* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateServerHealthRequests* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  UpdateServerHealthRequests* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<UpdateServerHealthRequests>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const UpdateServerHealthRequests& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const UpdateServerHealthRequests& from) { UpdateServerHealthRequests::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(UpdateServerHealthRequests* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "admin.UpdateServerHealthRequests"; }

 protected:
  explicit UpdateServerHealthRequests(::google::protobuf::Arena* arena);
  UpdateServerHealthRequests(::google::protobuf::Arena* arena, const UpdateServerHealthRequests& from);
  UpdateServerHealthRequests(::google::protobuf::Arena* arena, UpdateServerHealthRequests&& from) noexcept
      : UpdateServerHealthRequests(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUpdatesFieldNumber = 1,
  };
  // repeated .admin.UpdateServerHealthRequest updates = 1;
  int updates_size() const;
  private:
  int _internal_updates_size() const;

  public:
  void clear_updates() ;
  ::admin::UpdateServerHealthRequest* mutable_updates(int index);
  ::google::protobuf::RepeatedPtrField<::admin::UpdateServerHealthRequest>* mutable_updates();

  private:
  const ::google::protobuf::RepeatedPtrField<::admin::UpdateServerHealthRequest>& _internal_updates() const;
  ::google::protobuf::RepeatedPtrField<::admin::UpdateServerHealthRequest>* _internal_mutable_updates();
  public:
  const ::admin::UpdateServerHealthRequest& updates(int index) const;
  ::admin::UpdateServerHealthRequest* add_updates();
  const ::google::protobuf::RepeatedPtrField<::admin::UpdateServerHealthRequest>& updates() const;
  // @@protoc_insertion_point(class_scope:admin.UpdateServerHealthRequests)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const UpdateServerHealthRequests& from_msg);
    ::google::protobuf::RepeatedPtrField< ::admin::UpdateServerHealthRequest > updates_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fadmin_5fservice_2eproto;
};
// -------------------------------------------------------------------

class ListServersResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:admin.ListServersResponse) */ {
 public:
  inline ListServersResponse() : ListServersResponse(nullptr) {}
  ~ListServersResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ListServersResponse* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ListServersResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ListServersResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline ListServersResponse(const ListServersResponse& from) : ListServersResponse(nullptr, from) {}
  inline ListServersResponse(ListServersResponse&& from) noexcept
      : ListServersResponse(nullptr, std::move(from)) {}
  inline ListServersResponse& operator=(const ListServersResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListServersResponse& operator=(ListServersResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ListServersResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const ListServersResponse* internal_default_instance() {
    return reinterpret_cast<const ListServersResponse*>(
        &_ListServersResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ListServersResponse& a, ListServersResponse& b) { a.Swap(&b); }
  inline void Swap(ListServersResponse* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ListServersResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ListServersResponse* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ListServersResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ListServersResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ListServersResponse& from) { ListServersResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ListServersResponse* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "admin.ListServersResponse"; }

 protected:
  explicit ListServersResponse(::google::protobuf::Arena* arena);
  ListServersResponse(::google::protobuf::Arena* arena, const ListServersResponse& from);
  ListServersResponse(::google::protobuf::Arena* arena, ListServersResponse&& from) noexcept
      : ListServersResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kServersFieldNumber = 1,
  };
  // repeated .admin.ServerInfo servers = 1;
  int servers_size() const;
  private:
  int _internal_servers_size() const;

  public:
  void clear_servers() ;
  ::admin::ServerInfo* mutable_servers(int index);
  ::google::protobuf::RepeatedPtrField<::admin::ServerInfo>* mutable_servers();

  private:
  const ::google::protobuf::RepeatedPtrField<::admin::ServerInfo>& _internal_servers() const;
  ::google::protobuf::RepeatedPtrField<::admin::ServerInfo>* _internal_mutable_servers();
  public:
  const ::admin::ServerInfo& servers(int index) const;
  ::admin::ServerInfo* add_servers();
  const ::google::protobuf::RepeatedPtrField<::admin::ServerInfo>& servers() const;
  // @@protoc_insertion_point(class_scope:admin.ListServersResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 1,
      0, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const ListServersResponse& from_msg);
    ::google::protobuf::RepeatedPtrField< ::admin::ServerInfo > servers_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_proto_2fadmin_5fservice_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ListServersResponse

// repeated .admin.ServerInfo servers = 1;
inline int ListServersResponse::_internal_servers_size() const {
  return _internal_servers().size();
}
inline int ListServersResponse::servers_size() const {
  return _internal_servers_size();
}
inline void ListServersResponse::clear_servers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.servers_.Clear();
}
inline ::admin::ServerInfo* ListServersResponse::mutable_servers(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:admin.ListServersResponse.servers)
  return _internal_mutable_servers()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::admin::ServerInfo>* ListServersResponse::mutable_servers()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:admin.ListServersResponse.servers)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_servers();
}
inline const ::admin::ServerInfo& ListServersResponse::servers(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:admin.ListServersResponse.servers)
  return _internal_servers().Get(index);
}
inline ::admin::ServerInfo* ListServersResponse::add_servers() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::admin::ServerInfo* _add = _internal_mutable_servers()->Add();
  // @@protoc_insertion_point(field_add:admin.ListServersResponse.servers)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::admin::ServerInfo>& ListServersResponse::servers() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:admin.ListServersResponse.servers)
  return _internal_servers();
}
inline const ::google::protobuf::RepeatedPtrField<::admin::ServerInfo>&
ListServersResponse::_internal_servers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.servers_;
}
inline ::google::protobuf::RepeatedPtrField<::admin::ServerInfo>*
ListServersResponse::_internal_mutable_servers() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.servers_;
}

// -------------------------------------------------------------------

// ServerInfo

// string id = 1;
inline void ServerInfo::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& ServerInfo::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:admin.ServerInfo.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ServerInfo::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:admin.ServerInfo.id)
}
inline std::string* ServerInfo::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:admin.ServerInfo.id)
  return _s;
}
inline const std::string& ServerInfo::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void ServerInfo::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* ServerInfo::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* ServerInfo::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:admin.ServerInfo.id)
  return _impl_.id_.Release();
}
inline void ServerInfo::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:admin.ServerInfo.id)
}

// string host = 2;
inline void ServerInfo::clear_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.ClearToEmpty();
}
inline const std::string& ServerInfo::host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:admin.ServerInfo.host)
  return _internal_host();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void ServerInfo::set_host(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:admin.ServerInfo.host)
}
inline std::string* ServerInfo::mutable_host() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_host();
  // @@protoc_insertion_point(field_mutable:admin.ServerInfo.host)
  return _s;
}
inline const std::string& ServerInfo::_internal_host() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.host_.Get();
}
inline void ServerInfo::_internal_set_host(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.Set(value, GetArena());
}
inline std::string* ServerInfo::_internal_mutable_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.host_.Mutable( GetArena());
}
inline std::string* ServerInfo::release_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:admin.ServerInfo.host)
  return _impl_.host_.Release();
}
inline void ServerInfo::set_allocated_host(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.host_.IsDefault()) {
    _impl_.host_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:admin.ServerInfo.host)
}

// uint32 port = 3;
inline void ServerInfo::clear_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = 0u;
}
inline ::uint32_t ServerInfo::port() const {
  // @@protoc_insertion_point(field_get:admin.ServerInfo.port)
  return _internal_port();
}
inline void ServerInfo::set_port(::uint32_t value) {
  _internal_set_port(value);
  // @@protoc_insertion_point(field_set:admin.ServerInfo.port)
}
inline ::uint32_t ServerInfo::_internal_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_;
}
inline void ServerInfo::_internal_set_port(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = value;
}

// bool isHealthy = 4;
inline void ServerInfo::clear_ishealthy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ishealthy_ = false;
}
inline bool ServerInfo::ishealthy() const {
  // @@protoc_insertion_point(field_get:admin.ServerInfo.isHealthy)
  return _internal_ishealthy();
}
inline void ServerInfo::set_ishealthy(bool value) {
  _internal_set_ishealthy(value);
  // @@protoc_insertion_point(field_set:admin.ServerInfo.isHealthy)
}
inline bool ServerInfo::_internal_ishealthy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ishealthy_;
}
inline void ServerInfo::_internal_set_ishealthy(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ishealthy_ = value;
}

// int64 last_health_check_unix_seconds = 5;
inline void ServerInfo::clear_last_health_check_unix_seconds() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_health_check_unix_seconds_ = ::int64_t{0};
}
inline ::int64_t ServerInfo::last_health_check_unix_seconds() const {
  // @@protoc_insertion_point(field_get:admin.ServerInfo.last_health_check_unix_seconds)
  return _internal_last_health_check_unix_seconds();
}
inline void ServerInfo::set_last_health_check_unix_seconds(::int64_t value) {
  _internal_set_last_health_check_unix_seconds(value);
  // @@protoc_insertion_point(field_set:admin.ServerInfo.last_health_check_unix_seconds)
}
inline ::int64_t ServerInfo::_internal_last_health_check_unix_seconds() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_health_check_unix_seconds_;
}
inline void ServerInfo::_internal_set_last_health_check_unix_seconds(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_health_check_unix_seconds_ = value;
}

// int64 request_count = 6;
inline void ServerInfo::clear_request_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_count_ = ::int64_t{0};
}
inline ::int64_t ServerInfo::request_count() const {
  // @@protoc_insertion_point(field_get:admin.ServerInfo.request_count)
  return _internal_request_count();
}
inline void ServerInfo::set_request_count(::int64_t value) {
  _internal_set_request_count(value);
  // @@protoc_insertion_point(field_set:admin.ServerInfo.request_count)
}
inline ::int64_t ServerInfo::_internal_request_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.request_count_;
}
inline void ServerInfo::_internal_set_request_count(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.request_count_ = value;
}

// double cpu_usage = 7;
inline void ServerInfo::clear_cpu_usage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cpu_usage_ = 0;
}
inline double ServerInfo::cpu_usage() const {
  // @@protoc_insertion_point(field_get:admin.ServerInfo.cpu_usage)
  return _internal_cpu_usage();
}
inline void ServerInfo::set_cpu_usage(double value) {
  _internal_set_cpu_usage(value);
  // @@protoc_insertion_point(field_set:admin.ServerInfo.cpu_usage)
}
inline double ServerInfo::_internal_cpu_usage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cpu_usage_;
}
inline void ServerInfo::_internal_set_cpu_usage(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cpu_usage_ = value;
}

// double memory_usage = 8;
inline void ServerInfo::clear_memory_usage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_usage_ = 0;
}
inline double ServerInfo::memory_usage() const {
  // @@protoc_insertion_point(field_get:admin.ServerInfo.memory_usage)
  return _internal_memory_usage();
}
inline void ServerInfo::set_memory_usage(double value) {
  _internal_set_memory_usage(value);
  // @@protoc_insertion_point(field_set:admin.ServerInfo.memory_usage)
}
inline double ServerInfo::_internal_memory_usage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memory_usage_;
}
inline void ServerInfo::_internal_set_memory_usage(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_usage_ = value;
}

// -------------------------------------------------------------------

// UpdateServerHealthRequest

// string id = 1;
inline void UpdateServerHealthRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& UpdateServerHealthRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:admin.UpdateServerHealthRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void UpdateServerHealthRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:admin.UpdateServerHealthRequest.id)
}
inline std::string* UpdateServerHealthRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:admin.UpdateServerHealthRequest.id)
  return _s;
}
inline const std::string& UpdateServerHealthRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void UpdateServerHealthRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* UpdateServerHealthRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* UpdateServerHealthRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:admin.UpdateServerHealthRequest.id)
  return _impl_.id_.Release();
}
inline void UpdateServerHealthRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:admin.UpdateServerHealthRequest.id)
}

// bool isHealthy = 2;
inline void UpdateServerHealthRequest::clear_ishealthy() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ishealthy_ = false;
}
inline bool UpdateServerHealthRequest::ishealthy() const {
  // @@protoc_insertion_point(field_get:admin.UpdateServerHealthRequest.isHealthy)
  return _internal_ishealthy();
}
inline void UpdateServerHealthRequest::set_ishealthy(bool value) {
  _internal_set_ishealthy(value);
  // @@protoc_insertion_point(field_set:admin.UpdateServerHealthRequest.isHealthy)
}
inline bool UpdateServerHealthRequest::_internal_ishealthy() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ishealthy_;
}
inline void UpdateServerHealthRequest::_internal_set_ishealthy(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ishealthy_ = value;
}

// double cpu_usage = 3;
inline void UpdateServerHealthRequest::clear_cpu_usage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cpu_usage_ = 0;
}
inline double UpdateServerHealthRequest::cpu_usage() const {
  // @@protoc_insertion_point(field_get:admin.UpdateServerHealthRequest.cpu_usage)
  return _internal_cpu_usage();
}
inline void UpdateServerHealthRequest::set_cpu_usage(double value) {
  _internal_set_cpu_usage(value);
  // @@protoc_insertion_point(field_set:admin.UpdateServerHealthRequest.cpu_usage)
}
inline double UpdateServerHealthRequest::_internal_cpu_usage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cpu_usage_;
}
inline void UpdateServerHealthRequest::_internal_set_cpu_usage(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cpu_usage_ = value;
}

// double memory_usage = 4;
inline void UpdateServerHealthRequest::clear_memory_usage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_usage_ = 0;
}
inline double UpdateServerHealthRequest::memory_usage() const {
  // @@protoc_insertion_point(field_get:admin.UpdateServerHealthRequest.memory_usage)
  return _internal_memory_usage();
}
inline void UpdateServerHealthRequest::set_memory_usage(double value) {
  _internal_set_memory_usage(value);
  // @@protoc_insertion_point(field_set:admin.UpdateServerHealthRequest.memory_usage)
}
inline double UpdateServerHealthRequest::_internal_memory_usage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memory_usage_;
}
inline void UpdateServerHealthRequest::_internal_set_memory_usage(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_usage_ = value;
}

// -------------------------------------------------------------------

// UpdateServerHealthRequests

// repeated .admin.UpdateServerHealthRequest updates = 1;
inline int UpdateServerHealthRequests::_internal_updates_size() const {
  return _internal_updates().size();
}
inline int UpdateServerHealthRequests::updates_size() const {
  return _internal_updates_size();
}
inline void UpdateServerHealthRequests::clear_updates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.updates_.Clear();
}
inline ::admin::UpdateServerHealthRequest* UpdateServerHealthRequests::mutable_updates(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:admin.UpdateServerHealthRequests.updates)
  return _internal_mutable_updates()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::admin::UpdateServerHealthRequest>* UpdateServerHealthRequests::mutable_updates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:admin.UpdateServerHealthRequests.updates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_updates();
}
inline const ::admin::UpdateServerHealthRequest& UpdateServerHealthRequests::updates(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:admin.UpdateServerHealthRequests.updates)
  return _internal_updates().Get(index);
}
inline ::admin::UpdateServerHealthRequest* UpdateServerHealthRequests::add_updates() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::admin::UpdateServerHealthRequest* _add = _internal_mutable_updates()->Add();
  // @@protoc_insertion_point(field_add:admin.UpdateServerHealthRequests.updates)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::admin::UpdateServerHealthRequest>& UpdateServerHealthRequests::updates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:admin.UpdateServerHealthRequests.updates)
  return _internal_updates();
}
inline const ::google::protobuf::RepeatedPtrField<::admin::UpdateServerHealthRequest>&
UpdateServerHealthRequests::_internal_updates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.updates_;
}
inline ::google::protobuf::RepeatedPtrField<::admin::UpdateServerHealthRequest>*
UpdateServerHealthRequests::_internal_mutable_updates() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.updates_;
}

// -------------------------------------------------------------------

// AddServerResponse

// string id = 1;
inline void AddServerResponse::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& AddServerResponse::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:admin.AddServerResponse.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddServerResponse::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:admin.AddServerResponse.id)
}
inline std::string* AddServerResponse::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:admin.AddServerResponse.id)
  return _s;
}
inline const std::string& AddServerResponse::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void AddServerResponse::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* AddServerResponse::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* AddServerResponse::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:admin.AddServerResponse.id)
  return _impl_.id_.Release();
}
inline void AddServerResponse::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:admin.AddServerResponse.id)
}

// -------------------------------------------------------------------

// RemoveServerRequest

// string id = 1;
inline void RemoveServerRequest::clear_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.ClearToEmpty();
}
inline const std::string& RemoveServerRequest::id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:admin.RemoveServerRequest.id)
  return _internal_id();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void RemoveServerRequest::set_id(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:admin.RemoveServerRequest.id)
}
inline std::string* RemoveServerRequest::mutable_id() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_id();
  // @@protoc_insertion_point(field_mutable:admin.RemoveServerRequest.id)
  return _s;
}
inline const std::string& RemoveServerRequest::_internal_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.id_.Get();
}
inline void RemoveServerRequest::_internal_set_id(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.Set(value, GetArena());
}
inline std::string* RemoveServerRequest::_internal_mutable_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.id_.Mutable( GetArena());
}
inline std::string* RemoveServerRequest::release_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:admin.RemoveServerRequest.id)
  return _impl_.id_.Release();
}
inline void RemoveServerRequest::set_allocated_id(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.id_.IsDefault()) {
    _impl_.id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:admin.RemoveServerRequest.id)
}

// -------------------------------------------------------------------

// MetricsResponse

// double cpu_usage = 1;
inline void MetricsResponse::clear_cpu_usage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cpu_usage_ = 0;
}
inline double MetricsResponse::cpu_usage() const {
  // @@protoc_insertion_point(field_get:admin.MetricsResponse.cpu_usage)
  return _internal_cpu_usage();
}
inline void MetricsResponse::set_cpu_usage(double value) {
  _internal_set_cpu_usage(value);
  // @@protoc_insertion_point(field_set:admin.MetricsResponse.cpu_usage)
}
inline double MetricsResponse::_internal_cpu_usage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cpu_usage_;
}
inline void MetricsResponse::_internal_set_cpu_usage(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cpu_usage_ = value;
}

// double memory_usage = 2;
inline void MetricsResponse::clear_memory_usage() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_usage_ = 0;
}
inline double MetricsResponse::memory_usage() const {
  // @@protoc_insertion_point(field_get:admin.MetricsResponse.memory_usage)
  return _internal_memory_usage();
}
inline void MetricsResponse::set_memory_usage(double value) {
  _internal_set_memory_usage(value);
  // @@protoc_insertion_point(field_set:admin.MetricsResponse.memory_usage)
}
inline double MetricsResponse::_internal_memory_usage() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.memory_usage_;
}
inline void MetricsResponse::_internal_set_memory_usage(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.memory_usage_ = value;
}

// -------------------------------------------------------------------

// ServerConstraintsResponse

// uint32 min_servers = 1;
inline void ServerConstraintsResponse::clear_min_servers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_servers_ = 0u;
}
inline ::uint32_t ServerConstraintsResponse::min_servers() const {
  // @@protoc_insertion_point(field_get:admin.ServerConstraintsResponse.min_servers)
  return _internal_min_servers();
}
inline void ServerConstraintsResponse::set_min_servers(::uint32_t value) {
  _internal_set_min_servers(value);
  // @@protoc_insertion_point(field_set:admin.ServerConstraintsResponse.min_servers)
}
inline ::uint32_t ServerConstraintsResponse::_internal_min_servers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.min_servers_;
}
inline void ServerConstraintsResponse::_internal_set_min_servers(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.min_servers_ = value;
}

// uint32 max_servers = 2;
inline void ServerConstraintsResponse::clear_max_servers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_servers_ = 0u;
}
inline ::uint32_t ServerConstraintsResponse::max_servers() const {
  // @@protoc_insertion_point(field_get:admin.ServerConstraintsResponse.max_servers)
  return _internal_max_servers();
}
inline void ServerConstraintsResponse::set_max_servers(::uint32_t value) {
  _internal_set_max_servers(value);
  // @@protoc_insertion_point(field_set:admin.ServerConstraintsResponse.max_servers)
}
inline ::uint32_t ServerConstraintsResponse::_internal_max_servers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.max_servers_;
}
inline void ServerConstraintsResponse::_internal_set_max_servers(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.max_servers_ = value;
}

// uint32 active_servers = 3;
inline void ServerConstraintsResponse::clear_active_servers() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_servers_ = 0u;
}
inline ::uint32_t ServerConstraintsResponse::active_servers() const {
  // @@protoc_insertion_point(field_get:admin.ServerConstraintsResponse.active_servers)
  return _internal_active_servers();
}
inline void ServerConstraintsResponse::set_active_servers(::uint32_t value) {
  _internal_set_active_servers(value);
  // @@protoc_insertion_point(field_set:admin.ServerConstraintsResponse.active_servers)
}
inline ::uint32_t ServerConstraintsResponse::_internal_active_servers() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.active_servers_;
}
inline void ServerConstraintsResponse::_internal_set_active_servers(::uint32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.active_servers_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace admin


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // proto_2fadmin_5fservice_2eproto_2epb_2eh
